para crear un proyecto en next se puede hacer con
-> npx create-next-app@latest

tambien en el tutorial nos indica 
https://nextjs.org/learn/dashboard-app/getting-started
------------------------------ nombre ------- para asegurarse que usamos npm -- <--example> esto para incicializar un proyecto de nextjs y enves de empezar de 0 podemos empezarla desde una plantilla como una base para iniciar
-> npx create-next-app@latest nextjs-dashboard --use-npm --example "https://github.com/vercel/next-learn/tree/main/dashboard/starter-example"

------ LA ESTRUCTURA
en las carpetas 
la carpeta scripts lo ah creado la plantilla
tiene el archivo seed.js
lo que hace es que cuando lo ejecutemos nos va inicializar una BD que para no tener que hacer o consumir un JSON nos provee de una plantilla para crear una BD
luego la carpeta public
ahi estaran los archivos estaticos
lo que queremos que se sirvan como ser videos audios imagenes etc
y finalmente la carpeta app
es la mas importante
lo mas basico que tendremos es una page.tsx 
cada vez que queramos crear una nueva ruta en nuestra app sera crear un archivo .tsx o jsx 
nos creara un ruta y dependiendo de la anidacion de carpetas creara rutas

tambien tenemos un Layout.tsx lo que hara es envolver las paginas que tengamos ahi dentro

tambien tendriamos la carpeta ui que serian componentes ya creados
y la carpeta lib lo que tendriamos que tener es archivos para hacer fetching de datos, interfaces de typescript etc 


-- para evitar que se vuelva a renderizar toda la pagina cuando navegemos en la aplicacion asi tenga el mismo contenido
buscamos con ctrl + e el componente nav-links y cambiamos el ancor a por Link

--vamos a trabajar con la base de datos de postgresql que nos trae la capa gratuita de vercel
lo que haremos es ir a la pestaña de storage en vercel y copiaremos el contenido de la pestaña .env.local a nuestro .env en nuestro proyecto
y luego instalamos
npm install @vercel/postgres -E

como dijimos que teniamos un archivo seed que tenia una ejemplo de una base de datos
en el package.json colocamos un nuevo script para que importe las variables de entorno
 luego ejecute ese archivo asi añadismo
-> "seed": "node -r dotenv/config ./scripts/seed.js"
y luego ejecutamos 
npm run seed
asi esto creara las tablas y lo podremos ver en la cuenta 

para no sobrecargar el servidor con consultas usaremos una libreria de react 
npm install use-debounce -E

para las validaciones
npm install zod -E



